{
	"info": {
		"_postman_id": "4d49ce10-6b49-4771-acc2-ddd1da4c7f95",
		"name": "RobicServer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"email here\",\n    \"password\": \"Password here\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Ryan\",\n    \"lastName\": \"Test\",\n    \"email\": \"ryan@test231.com\",\n    \"password\": \"Password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise",
			"item": [
				{
					"name": "Get Exercises By Definition",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/exercise?definition=6033560614e4fd0004273eaa",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercise"
							],
							"query": [
								{
									"key": "definition",
									"value": "6033560614e4fd0004273eaa"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Exercise By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/exercise/60b17bb0b7b21383c57a5e74",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercise",
								"60b17bb0b7b21383c57a5e74"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Exercise",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"definition\": \"6033560614e4fd0004273eaa\",\n        \"date\": \"2021-02-22T07:36:09.458Z\",\n        \"timeTaken\": \"1970-01-01T00:00:01.076Z\",\n        \"sets\": [\n            {\n                \"exercises\": null,\n                \"value\": 5000,\n                \"reps\": 1\n            },\n            {\n                \"exercises\": null,\n                \"value\": 5,\n                \"reps\": 1\n            },\n            {\n                \"exercises\": null,\n                \"value\": 5,\n                \"reps\": 1\n            }\n        ]\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/exercise",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercise"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Exercise",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"definition\": \"6033560614e4fd0004273eaa\",\n    \"date\": \"2021-05-29T11:24:32.885041+12:00\",\n    \"timeTaken\": \"1970-01-01T00:00:01.076Z\",\n    \"sets\": [\n        {\n            \"id\": null,\n            \"exercises\": null,\n            \"value\": 10000,\n            \"reps\": 1\n        }\n    ],\n    \"netValue\": 5010,\n    \"id\": \"60b17bb0b7b21383c57a5e74\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/exercise/60b17bb0b7b21383c57a5e74",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercise",
								"60b17bb0b7b21383c57a5e74"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Exercise",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/exercise/60b17bb0b7b21383c57a5e74",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercise",
								"60b17bb0b7b21383c57a5e74"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exercise Definition",
			"item": [
				{
					"name": "Get Exercise Definitions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/exercisedefinition",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercisedefinition"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Exercise Definition by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/exercisedefinition/6033560614e4fd0004273eaa",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercisedefinition",
								"6033560614e4fd0004273eaa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Exercise Definition",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"6033560614e4fd0004273eaa\",\n    \"title\": \"Squats\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/exercisedefinition/6033560614e4fd0004273eaa",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercisedefinition",
								"6033560614e4fd0004273eaa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Exercise Definition",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/exercisedefinition/60ab33c226cbfe81f86e640c",
							"host": [
								"{{url}}"
							],
							"path": [
								"exercisedefinition",
								"60ab33c226cbfe81f86e640c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/603353fb14e4fd0004273ea9",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"603353fb14e4fd0004273ea9"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Analytics",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/analytics",
					"host": [
						"{{url}}"
					],
					"path": [
						"analytics"
					]
				}
			},
			"response": []
		},
		{
			"name": "Predict",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();\r",
							"const labels = res.actualResults.map((val, index) => index);\r",
							"const maxIndex = Math.max(...labels);\r",
							"const predictedLabels = res.predictionResults.forecastedNetValue.map((val, index) => maxIndex + index + 1);\r",
							"labels.push(...predictedLabels);\r",
							"const buffer = res.actualResults.map(() => null);\r",
							"buffer.pop();\r",
							"const vizData = {\r",
							"  labels,\r",
							"  predictedLabels,\r",
							"  actualResults: res.actualResults,\r",
							"  forecastedResults: res.forecastedResults,\r",
							"  predictedEstimate: [...buffer, ...res.predictionResults.forecastedNetValue],\r",
							"  lowerEstimate: [...buffer, ...res.predictionResults.lowerBoundNetValue],\r",
							"  upperEstimate: [...buffer, ...res.predictionResults.upperBoundNetValue]\r",
							"};\r",
							"\r",
							"var template = `\r",
							"<canvas id=\"chart\"></canvas>\r",
							"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script> \r",
							"<script>\r",
							"    var ctx = document.getElementById(\"chart\");\r",
							"\r",
							"    var myChart = new Chart(ctx, {\r",
							"        type: \"line\",\r",
							"        data: {\r",
							"            labels: [],\r",
							"            datasets: [{\r",
							"                    label: 'Actual',\r",
							"                    data: [],\r",
							"\t\t\t\t\tborderColor: \"blue\",\r",
							"\t\t\t\t\tfill: false,         \r",
							"                },\r",
							"                {\r",
							"                    label: 'Forecasted',\r",
							"                    data: [],\r",
							"                    borderColor: \"purple\",\r",
							"                    fill: false,         \r",
							"                },\r",
							"                {\r",
							"                    label: 'Predicted',\r",
							"                    data: [],\r",
							"                    borderColor: \"orange\",\r",
							"                    fill: false,         \r",
							"                },\r",
							"                {\r",
							"                    label: 'Predicted (Lower band)',\r",
							"                    data: [],\r",
							"                    borderColor: \"yellow\",\r",
							"                    fill: false,         \r",
							"                },\r",
							"                {\r",
							"                    label: 'Predicted (Upper band)',\r",
							"                    data: [],\r",
							"                    borderColor: \"red\",\r",
							"                    fill: false,         \r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        options: {\r",
							"            legend: { display: true },\r",
							"            title: {\r",
							"                display: true,\r",
							"                text: ''\r",
							"            },\r",
							"            scales: {\r",
							"                xAxes: [{\r",
							"                    display: true,\r",
							"                    scaleLabel: {\r",
							"                        display: true,\r",
							"                        labelString: 'Session'\r",
							"                    }\r",
							"                }],\r",
							"                yAxes: [{\r",
							"                    display: true,\r",
							"                    scaleLabel: {\r",
							"                        display: true,\r",
							"                        labelString: 'NetValue'\r",
							"                    }\r",
							"                }]\r",
							"            }\r",
							"        }\r",
							"\r",
							"    });\r",
							"\r",
							"    // Access the data passed to pm.visualizer.set() from the JavaScript\r",
							"    // code of the Visualizer template\r",
							"    pm.getData((err, value) => {\r",
							"        myChart.data.datasets[0].data = value.actualResults;\r",
							"        myChart.data.datasets[1].data = value.forecastedResults;\r",
							"        myChart.data.datasets[2].data = value.predictedEstimate;\r",
							"        myChart.data.datasets[3].data = value.lowerEstimate;\r",
							"        myChart.data.datasets[4].data = value.upperEstimate;\r",
							"        myChart.data.labels = value.labels;\r",
							"        myChart.update();\r",
							"    });\r",
							"</script>`;\r",
							"\r",
							"pm.visualizer.set(template, vizData);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/analytics/predict/5d0fd1a337efa80017a58fd1",
					"host": [
						"{{url}}"
					],
					"path": [
						"analytics",
						"predict",
						"5d0fd1a337efa80017a58fd1"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:5000/api"
		},
		{
			"key": "token",
			"value": "auth token"
		}
	]
}